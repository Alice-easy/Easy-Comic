# Phase 4 CI/CD 流水线配置
name: Easy Comic Phase 4 CI/CD

on:
  push:
    branches: [ main, develop, phase-4 ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    # Phase 4 任务 1: 单元测试覆盖
    - name: Run Unit Tests
      run: ./gradlew test --continue
      
    - name: Generate Test Coverage Report
      run: ./gradlew jacocoTestReport
      
    # Phase 4 任务 2: 性能基准测试
    - name: Run Performance Benchmark Tests
      run: ./gradlew :app:testDebugUnitTest --tests "*PerformanceBenchmarkTest"
      
    # Phase 4 任务 3: 代码质量检查
    - name: Run Lint
      run: ./gradlew lint
      
    - name: Run Detekt (Static Analysis)
      run: ./gradlew detekt
      continue-on-error: true
      
    # Phase 4 任务 4: 构建检查
    - name: Build Debug APK
      run: ./gradlew assembleDebug
      
    - name: Build Release APK
      run: ./gradlew assembleRelease
      
    # 测试报告上传
    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          **/build/reports/tests/
          **/build/reports/jacoco/
          **/build/reports/lint-results*.html
          
    # 性能报告
    - name: Upload Performance Reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: performance-reports
        path: |
          **/build/reports/tests/**/PerformanceBenchmarkTest.html
          
  # Android UI 测试 (Phase 4 扩展)
  android-test:
    runs-on: macos-latest
    needs: test-and-quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run Android UI Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30
        target: google_apis
        arch: x86_64
        script: ./gradlew connectedAndroidTest
        
  # 发布准备检查 (Phase 4)
  release-readiness:
    runs-on: ubuntu-latest
    needs: [test-and-quality, android-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    # Phase 4 发布检查清单
    - name: Check Release Readiness
      run: |
        echo "🚀 Phase 4 Release Readiness Check"
        echo "================================="
        
        # 检查版本号
        echo "📋 Checking version information..."
        ./gradlew -q printVersion
        
        # 检查所有测试通过
        echo "🧪 Running final test suite..."
        ./gradlew test
        
        # 检查代码质量
        echo "🔍 Running quality checks..."
        ./gradlew lint detekt
        
        # 构建发布版本
        echo "📦 Building release APK..."
        ./gradlew assembleRelease
        
        # 检查APK大小
        echo "📊 Checking APK size..."
        ls -lh app/build/outputs/apk/release/*.apk
        
        echo "✅ Release readiness check completed"
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v3
      with:
        name: release-apk
        path: app/build/outputs/apk/release/*.apk
        
  # 性能回归检测
  performance-regression:
    runs-on: ubuntu-latest
    needs: test-and-quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Run Performance Regression Tests
      run: |
        echo "📊 Performance Regression Check"
        echo "==============================="
        
        ./gradlew :app:testDebugUnitTest --tests "*PerformanceBenchmarkTest" --info
        
        # 检查性能指标是否在目标范围内
        echo "Performance targets:"
        echo "- Startup time: < 1500ms"
        echo "- Page turn: < 80ms"  
        echo "- Search: < 300ms"
        echo "- Memory: < 120MB"
        
    - name: Performance Alert
      if: failure()
      run: |
        echo "❌ Performance regression detected!"
        echo "Please review performance metrics and optimize before merging."
        exit 1
